name: Frontend Continuous integration

on:
  push:
    branches: 
    - main
  pull_request:
    branches:
    - main

env:
  MYSQL_PWD: ${{ secrets.CI_DB_PASSWORD }}
  

jobs:
  test-frontend: 
    defaults:
      run:
        working-directory: frontend
    runs-on: ubuntu-latest

    steps:

    - uses: actions/checkout@v3
    - name: Use Node.js 17
      uses: actions/setup-node@v3
      with:
        node-version: 17
    - name: Install dependencies
      run: npm install
    - name: Launch test 
      run: npm test
  
  test-backend: 
    defaults:
      run:
        working-directory: backend
    runs-on: ubuntu-latest
    env:
      PouletMayo_Db__Host: localhost
      PouletMayo_Db__User: root
      PouletMayo_Db__Password: ${{ secrets.CI_DB_PASSWORD }}
      PouletMayo_Db__Database: pouletmayo

    services:
      mysql:
        image: mysql:8
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.CI_DB_PASSWORD }}

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET Core SDK 6
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
    - name: Install dependencies
      run: dotnet restore
    - name: Test
      run: dotnet test --no-restore

  integration-test: 

    services:
      mysql:
        options: --health-cmd="mysqladmin ping" --health-interval 10s --health-timeout 5s --health-retries 5

        image: mysql:8
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.CI_DB_PASSWORD }}

    runs-on: ubuntu-latest
    needs: [test-backend, test-frontend]
    steps:
    - run: docker network ls
  #   - uses: actions/checkout@v3
  #   - name: Run database migration
  #     run: ./bootstrap-mysql.sh
  #     working-directory: mysql
  #   - name: Start components
  #     run: docker compose -f docker-compose.build.yml up -d 
  #   - name: Run integration test 
  #     run: |
  #       wget -q https://github.com/grafana/k6/releases/download/v0.37.0/k6-v0.37.0-linux-amd64.tar.gz
  #       tar -xzf k6-v0.37.0-linux-amd64.tar.gz
  #       chmod +x k6-v0.37.0-linux-amd64/k6
  #       k6-v0.37.0-linux-amd64/k6 run k6/script.js
  #   - name: Stop components
  #     run: docker compose -f docker-compose.build.yml down 

  # build-image:
  #   strategy:
  #     matrix:
  #       component: ["frontend", "backend"]
  #   runs-on: ubuntu-latest
  #   needs: [integration-test]
  #   if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Login to Docker Hub
  #     uses: docker/login-action@v1
  #     with:
  #       username: ${{ secrets.DOCKERHUB_USERNAME }}
  #       password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

  #   - name: Build the Docker image
  #     uses: docker/build-push-action@v2
  #     with: 
  #       context: ${{ matrix.component }}
  #       file: ${{ matrix.component }}/Dockerfile
  #       push: true
  #       tags: ${{ secrets.DOCKERHUB_USERNAME }}/spm-${{ matrix.component }}:${{ env.BRANCH_NAME }}
